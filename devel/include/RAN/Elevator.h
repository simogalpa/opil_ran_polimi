// Generated by gencpp from file RAN/Elevator.msg
// DO NOT EDIT!


#ifndef RAN_MESSAGE_ELEVATOR_H
#define RAN_MESSAGE_ELEVATOR_H

#include <ros/service_traits.h>


#include <RAN/ElevatorRequest.h>
#include <RAN/ElevatorResponse.h>


namespace RAN
{

struct Elevator
{

typedef ElevatorRequest Request;
typedef ElevatorResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Elevator
} // namespace RAN


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::RAN::Elevator > {
  static const char* value()
  {
    return "95eb02fdea4929cfb10e81b4601959cf";
  }

  static const char* value(const ::RAN::Elevator&) { return value(); }
};

template<>
struct DataType< ::RAN::Elevator > {
  static const char* value()
  {
    return "RAN/Elevator";
  }

  static const char* value(const ::RAN::Elevator&) { return value(); }
};


// service_traits::MD5Sum< ::RAN::ElevatorRequest> should match 
// service_traits::MD5Sum< ::RAN::Elevator > 
template<>
struct MD5Sum< ::RAN::ElevatorRequest>
{
  static const char* value()
  {
    return MD5Sum< ::RAN::Elevator >::value();
  }
  static const char* value(const ::RAN::ElevatorRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::RAN::ElevatorRequest> should match 
// service_traits::DataType< ::RAN::Elevator > 
template<>
struct DataType< ::RAN::ElevatorRequest>
{
  static const char* value()
  {
    return DataType< ::RAN::Elevator >::value();
  }
  static const char* value(const ::RAN::ElevatorRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::RAN::ElevatorResponse> should match 
// service_traits::MD5Sum< ::RAN::Elevator > 
template<>
struct MD5Sum< ::RAN::ElevatorResponse>
{
  static const char* value()
  {
    return MD5Sum< ::RAN::Elevator >::value();
  }
  static const char* value(const ::RAN::ElevatorResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::RAN::ElevatorResponse> should match 
// service_traits::DataType< ::RAN::Elevator > 
template<>
struct DataType< ::RAN::ElevatorResponse>
{
  static const char* value()
  {
    return DataType< ::RAN::Elevator >::value();
  }
  static const char* value(const ::RAN::ElevatorResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // RAN_MESSAGE_ELEVATOR_H
