controller_frequency: 5.0
recovery_behaviors:  [{name: conservative_reset, type: clear_costmap_recovery/ClearCostmapRecovery}, {name: rotate_recovery, type: rotate_recovery/RotateRecovery}, {name: aggressive_reset, type: clear_costmap_recovery/ClearCostmapRecovery}]


TrajectoryPlannerROS:
  #Set the velocity limits of the robot
  max_vel_x: 0.45
  min_vel_x: 0.1
  max_vel_theta: 0.3
  min_in_place_vel_theta: 0.1
  
  #Set the acceleration limits of the robot
  acc_lim_theta: 0.5
  acc_lim_x: 0.5
  acc_lim_y: 0.5

  #The velocity the robot will command when trying to escape from a stuck situation
  escape_vel: -0.2

  holonomic_robot: false
  
  #Set the tolerance on achieving a goal
  xy_goal_tolerance: 0.2
  yaw_goal_tolerance: 0.1
  latch_xy_goal_tolerance: false
  #We'll use the Dynamic Window Approach to control instead of Trajectory Rollout for this example
  dwa: true
  
  #We'll configure how long and with what granularity we'll forward simulate trajectories
  sim_time: 3
  sim_granularity: 0.02
  angular_sim_granularity: 0.025
  vx_samples: 5
  vtheta_samples: 20

  meter_scoring: true
  pdist_scale : 2

  oscillation_reset_dist: 0.05
